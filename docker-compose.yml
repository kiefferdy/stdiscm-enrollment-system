services:
  discovery-service:
    build: ./discovery-service
    ports:
      - "8761:8761"
    networks:
      - enrollment-network
    depends_on:
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - enrollment-network

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://database-cluster:3306/enrollment_auth?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      node1:
        condition: service_healthy
      node2:
        condition: service_started
      node3:
        condition: service_started
    networks:
      - enrollment-network

  course-service:
    build: ./course-service
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://database-cluster:3306/enrollment_course?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      node1:
        condition: service_healthy
      node2:
        condition: service_started
      node3:
        condition: service_started
    networks:
      - enrollment-network

  grade-service:
    build: ./grade-service
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://database-cluster:3306/enrollment_grade?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      node1:
        condition: service_healthy
      node2:
        condition: service_started
      node3:
        condition: service_started
    networks:
      - enrollment-network

  profile-service:
    build: ./profile-service
    ports:
      - "8085:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://database-cluster:3306/enrollment_profile?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      node1:
        condition: service_healthy
      node2:
        condition: service_started
      node3:
        condition: service_started
    networks:
      - enrollment-network

  frontend-service:
    build: ./frontend-service
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - enrollment-network

  # First Galera node
  node1:
    image: bitnami/mariadb-galera:latest
    restart: always
    ports:
      - "3308:3306"
    environment:
      # Basic settings
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=enrollment
      # Galera cluster settings
      - MARIADB_GALERA_CLUSTER_NAME=enrollment_cluster
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://
      - MARIADB_GALERA_BOOTSTRAP=yes
      - MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
      # Authentication
      - MARIADB_GALERA_MARIABACKUP_USER=backup
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup123
      # Create databases
      - MARIADB_EXTRA_DATABASES=enrollment_auth,enrollment_course,enrollment_grade,enrollment_profile
      # Node configuration
      - MARIADB_GALERA_NODE_NAME=node1
      # Additional settings - performance
      - MARIADB_INNODB_BUFFER_POOL_SIZE=256M
      - MARIADB_INNODB_LOG_FILE_SIZE=64M
      - MARIADB_MAX_ALLOWED_PACKET=128M
      - MARIADB_MAX_CONNECTIONS=1000
    volumes:
      - node1-data:/bitnami/mariadb
    networks:
      enrollment-network:
        aliases:
          - database-cluster
          - node1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Second Galera node
  node2:
    image: bitnami/mariadb-galera:latest
    restart: always
    ports:
      - "3309:3306"
    environment:
      # Basic settings
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=enrollment
      # Galera cluster settings
      - MARIADB_GALERA_CLUSTER_NAME=enrollment_cluster
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://node1
      # Authentication
      - MARIADB_GALERA_MARIABACKUP_USER=backup
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup123
      # Create databases
      - MARIADB_EXTRA_DATABASES=enrollment_auth,enrollment_course,enrollment_grade,enrollment_profile
      # Node configuration
      - MARIADB_GALERA_NODE_NAME=node2
      # Additional settings - performance
      - MARIADB_INNODB_BUFFER_POOL_SIZE=256M
      - MARIADB_INNODB_LOG_FILE_SIZE=64M
      - MARIADB_MAX_ALLOWED_PACKET=128M
      - MARIADB_MAX_CONNECTIONS=1000
    volumes:
      - node2-data:/bitnami/mariadb
    networks:
      enrollment-network:
        aliases:
          - database-cluster
          - node2
    depends_on:
      node1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Third Galera node
  node3:
    image: bitnami/mariadb-galera:latest
    restart: always
    ports:
      - "3310:3306"
    environment:
      # Basic settings
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=enrollment
      # Galera cluster settings
      - MARIADB_GALERA_CLUSTER_NAME=enrollment_cluster
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://node1
      # Authentication
      - MARIADB_GALERA_MARIABACKUP_USER=backup
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup123
      # Create databases
      - MARIADB_EXTRA_DATABASES=enrollment_auth,enrollment_course,enrollment_grade,enrollment_profile
      # Node configuration
      - MARIADB_GALERA_NODE_NAME=node3
      # Additional settings - performance
      - MARIADB_INNODB_BUFFER_POOL_SIZE=256M
      - MARIADB_INNODB_LOG_FILE_SIZE=64M
      - MARIADB_MAX_ALLOWED_PACKET=128M
      - MARIADB_MAX_CONNECTIONS=1000
    volumes:
      - node3-data:/bitnami/mariadb
    networks:
      enrollment-network:
        aliases:
          - database-cluster
          - node3
    depends_on:
      node1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  enrollment-network:
    driver: bridge

volumes:
  node1-data:
  node2-data:
  node3-data: