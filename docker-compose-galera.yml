services:
  discovery-service:
    build: ./discovery-service
    ports:
      - "8761:8761"
    networks:
      - enrollment-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - enrollment-network

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://proxysql:6033/enrollment_auth?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      proxysql:
        condition: service_healthy
    networks:
      - enrollment-network

  course-service:
    build: ./course-service
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://proxysql:6033/enrollment_course?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      proxysql:
        condition: service_healthy
    networks:
      - enrollment-network

  grade-service:
    build: ./grade-service
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://proxysql:6033/enrollment_grade?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      proxysql:
        condition: service_healthy
    networks:
      - enrollment-network

  profile-service:
    build: ./profile-service
    ports:
      - "8085:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://proxysql:6033/enrollment_profile?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    depends_on:
      discovery-service:
        condition: service_healthy
      proxysql:
        condition: service_healthy
    networks:
      - enrollment-network

  frontend-service:
    build: ./frontend-service
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - enrollment-network

  # Galera Cluster configuration
  galera-node1:
    image: bitnami/mariadb-galera:latest
    container_name: galera-node1
    ports:
      - "3309:3306"
    environment:
      - MARIADB_GALERA_CLUSTER_NAME=enrollment_cluster
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=enrollment
      - MARIADB_ENABLE_ROOT_FROM_ALL=yes
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup_password
    volumes:
      - galera-node1-data:/bitnami/mariadb
      - ./galera-init:/docker-entrypoint-initdb.d
    networks:
      - enrollment-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  galera-node2:
    image: bitnami/mariadb-galera:latest
    container_name: galera-node2
    ports:
      - "3307:3306"
    environment:
      - MARIADB_GALERA_CLUSTER_NAME=enrollment_cluster
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://galera-node1
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=enrollment
      - MARIADB_ENABLE_ROOT_FROM_ALL=yes
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup_password
    volumes:
      - galera-node2-data:/bitnami/mariadb
    networks:
      - enrollment-network
    depends_on:
      galera-node1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  galera-node3:
    image: bitnami/mariadb-galera:latest
    container_name: galera-node3
    ports:
      - "3308:3306"
    environment:
      - MARIADB_GALERA_CLUSTER_NAME=enrollment_cluster
      - MARIADB_GALERA_CLUSTER_ADDRESS=gcomm://galera-node1
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=enrollment
      - MARIADB_ENABLE_ROOT_FROM_ALL=yes
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup_password
    volumes:
      - galera-node3-data:/bitnami/mariadb
    networks:
      - enrollment-network
    depends_on:
      galera-node1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ProxySQL configuration
  proxysql:
    image: proxysql/proxysql:latest
    container_name: proxysql
    ports:
      - "6033:6033" # MySQL client port
      - "6032:6032" # Admin port
    volumes:
      - ./proxysql/proxysql.cnf:/etc/proxysql.cnf
    networks:
      - enrollment-network
    depends_on:
      galera-node1:
        condition: service_healthy
      galera-node2:
        condition: service_healthy
      galera-node3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "mysqladmin ping -h 127.0.0.1 -P 6032 -u admin -padmin || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 60s
    restart: on-failure

networks:
  enrollment-network:
    driver: bridge

volumes:
  galera-node1-data:
  galera-node2-data:
  galera-node3-data:
